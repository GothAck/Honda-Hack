#!/usr/bin/python

import sys
import os

import pygame
import pygame.midi
import pygame.time
from pygame.locals import *

from time import sleep

device_id = 4
#start_note = 53
start_note = 32

from car import get_car_state, get_car_change


def go(beat, st):
    gear = int(st["gear"])

    # layer 1, beat
    if beat % 4 == 0:
        midi_out.note_off(start_note+gear, None, 0)
        if gear > 0:
            midi_out.note_on (start_note+gear, 127,  0)
    if beat % 4 == 1:
        midi_out.note_off(start_note+gear, None, 0)
        if gear > 0:
            midi_out.note_on (start_note+gear, 127,  0)
    if beat % 4 == 2:
        midi_out.note_off(start_note+gear+5, None, 0)
        if gear > 0:
            midi_out.note_on (start_note+gear+5, 127,  0)

    # layer 2, piano
    if beat % 8 == 0:
        midi_out.note_off(start_note+04, None, 1)
        midi_out.note_off(start_note+16, None, 1)
        if gear > 1:
            midi_out.note_on (start_note+04, 127,  1)
            midi_out.note_on (start_note+16, 127,  1)
    if beat % 8 == 1:
        midi_out.note_off(start_note+ 8, None, 1)
        midi_out.note_off(start_note+20, None, 1)
        if gear > 1:
            midi_out.note_on (start_note+ 8, 127,  1)
            midi_out.note_on (start_note+20, 127,  1)
    if beat % 8 == 2 or beat % 8 == 3:
        midi_out.note_off(start_note+01, None, 1)
        midi_out.note_off(start_note+13, None, 1)
        if gear > 1:
            midi_out.note_on (start_note+01, 127,  1)
            midi_out.note_on (start_note+13, 127,  1)
    if beat % 8 == 4 or beat % 8 == 5:
        midi_out.note_off(start_note+00, None, 1)
        midi_out.note_off(start_note+12, None, 1)
        if gear > 1:
            midi_out.note_on (start_note+00, 127,  1)
            midi_out.note_on (start_note+12, 127,  1)
    if beat % 8 == 6 or beat % 8 == 7:
        midi_out.note_off(start_note+00, None, 1)
        midi_out.note_off(start_note+12, None, 1)
        if gear > 1:
            midi_out.note_on (start_note+00, 127,  1)
            midi_out.note_on (start_note+12, 127,  1)

    # layer 3, guitar
    if beat % 4 == 0:
        midi_out.note_off(start_note+5, None, 2)
        midi_out.note_off(start_note+8, None, 2)
        if gear > 2:
            midi_out.note_on (start_note+5, 127,  2)
            midi_out.note_on (start_note+8, 127,  2)
    if beat % 4 == 1:
        midi_out.note_off(start_note+2, None, 2)
        midi_out.note_off(start_note+3, None, 2)
        if gear > 2:
            midi_out.note_on (start_note+2, 127,  2)
            midi_out.note_on (start_note+3, 127,  2)
    if beat % 4 == 2:
        midi_out.note_off(start_note+8, None, 2)
        midi_out.note_off(start_note+7, None, 2)
        if gear > 2:
            midi_out.note_on (start_note+8, 127,  2)
            midi_out.note_on (start_note+7, 127,  2)
    if beat % 4 == 3:
        midi_out.note_off(start_note+4, None, 2)
        midi_out.note_off(start_note+1, None, 2)
        if gear > 2:
            midi_out.note_on (start_note+4, 127,  2)
            midi_out.note_on (start_note+1, 127,  2)


if __name__ == '__main__':
    midi_out = None
    try:
        pygame.init()
        pygame.midi.init()
        port = device_id
        midi_out = pygame.midi.Output(port, 0)
        #midi_out.set_instrument(115, 0) # basic beat
        midi_out.set_instrument(32,  0) # basic beat
        midi_out.set_instrument(1,   1) # piano
        midi_out.set_instrument(26,  2) # guitar
        clock = pygame.time.Clock()
        beat = 0
        while True:
            old_state, new_state, diff_state = get_car_change()
            print new_state
            go(beat, new_state)
            bpm = int(20+float(new_state["speed"]))
            clock.tick((float(bpm)/60)*4)
            beat = beat + 1
    except KeyboardInterrupt:
        print "Interrupted"
        pass
    except Exception as e:
        print e
    finally:
        if midi_out:
            #midi_out.abort()  # not implemented
            midi_out.close()
        pygame.midi.quit()
        pygame.quit()
